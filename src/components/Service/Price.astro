---
import { getEntryBySlug } from "astro:content";
import { getCollection } from "astro:content";
import Heading from "../ui/Heading.astro";
var PricingData = await getCollection("Pricing");
PricingData = PricingData.filter((data) => data.slug.startsWith("plan-"));
const IndexData = await getEntryBySlug("Pricing", "index");
const { header } = IndexData?.data;
---

<section class='section-pricing'>
  <div class='bg-ColorYellow/5'>
    <div class='section-space'>
      <div class='container-default'>
        <Heading heading={header} MaxWidth='max-w-[600px]' />
        <div class='my-[50px] flex flex-row items-center justify-center gap-6'>
          <span class='font-bold'>Per Month</span>
          <label for='toggle' class='flex cursor-pointer items-center'>
            <span
              class='relative inline-block h-[35px] w-[70px] rounded-[35px] bg-ColorBlack'>
              <input id='toggle' type='checkbox' class='hidden' />
              <span
                class='toggle_dot absolute h-[35px] w-[35px] rounded-full bg-ColorYellow transition-all duration-300'
              ></span>
            </span>
          </label>
          <span class='font-bold'>Per Year</span>
        </div>
        <div class='grid gap-x-6 gap-y-10 md:grid-cols-2 lg:grid-cols-3'>
          {
            PricingData?.map(({ data }: any, index) => (
              <div
                class='jos'
                data-jos_animation='flip-left'
                data-jos_delay='0'>
                <div class='hover-solid-shadow h-full'>
                  <div class='rounded-[10px] border-2 border-ColorBlack bg-white p-7 xl:p-10 h-full'>
                    <div class='text-center text-ColorBlack'>
                      <span class='text-xl font-bold'>{data?.name}</span>
                      <div class='text-[28px] font-normal leading-[2.85] price-month'>
                        $
                        <span class='text-[48px] font-bold leading-[1.3] xl:text-[58px]'>
                          {data?.price}
                        </span>
                        /month
                      </div>
                      <div class='text-[28px] font-normal leading-[2.85] price-year hidden'>
                        $
                        <span class='text-[48px] font-bold leading-[1.3] xl:text-[58px]'>
                          {data?.price * 12}
                        </span>
                        /year
                      </div>
                      <span class='text-sm text-ColorBlack/70'>
                        {data?.description}
                      </span>
                    </div>

                    <div class='my-10 h-px w-full bg-ColorBlack/10' />

                    <ul class='flex flex-col gap-y-6 text-base font-semibold text-ColorBlack xl:px-[18px]'>
                      {data?.points?.included?.map((point: string) => {
                        return (
                          <li class='flex gap-x-3'>
                            <span class='text-xl'>
                              <i class='fa-solid fa-star' />
                            </span>
                            {point}
                          </li>
                        );
                      })}
                      {data?.points?.excluded?.map((point: string) => {
                        return (
                          <li class='flex gap-x-3 text-ColorBlack/10'>
                            <span class='text-xl'>
                              <i class='fa-solid fa-star' />
                            </span>
                            {point}
                          </li>
                        );
                      })}
                    </ul>
                    <div class='mt-10 flex justify-center'>
                      <a
                        href={data?.button?.link}
                        class={`btn ${index == 1 ? "is-yellow" : "is-white"} is-large group w-full border-2`}>
                        {data?.button?.text}
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>
<script>
  function togglePrice() {
    const prices = document.querySelectorAll(".price-month, .price-year");

    prices.forEach((price: any) => {
      if (price.classList.contains("hidden")) {
        price.classList.remove("hidden");
      } else {
        price.classList.add("hidden");
      }
    });
  }

  const toggleButton = document.getElementById("toggle") as HTMLInputElement;
  toggleButton.addEventListener("change", togglePrice);
</script>
